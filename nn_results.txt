MLPRegressor(activation='logistic', alpha=8.67888675442e-05,        batch_size='auto', beta_1=0.886834168656, beta_2=0.930162526926,        early_stopping=False, epsilon=4.69992073263e-08,        hidden_layer_sizes=(568,), learning_rate='adaptive',        learning_rate_init=0.00143526498256, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=7, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176] |(568,) |logistic |adaptive |0.886834168656 |0.930162526926 |4.69992073263e-08 |0.00143526498256 |8.67888675442e-05 |0.999768250135 |0.74364955569
MLPRegressor(activation='relu', alpha=0.000121613883209, batch_size='auto',        beta_1=0.894844041964, beta_2=0.966097843049, early_stopping=False,        epsilon=5.56771896928e-08, hidden_layer_sizes=(1102,),        learning_rate='adaptive', learning_rate_init=0.000786663528974,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=13, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160] |(1102,) |relu |adaptive |0.894844041964 |0.966097843049 |5.56771896928e-08 |0.000786663528974 |0.000121613883209 |0.995549105311 |0.773514160759
MLPRegressor(activation='relu', alpha=0.000107086917176, batch_size='auto',        beta_1=0.882160811207, beta_2=0.949655526598, early_stopping=False,        epsilon=3.06996111798e-08, hidden_layer_sizes=(93, 1297),        learning_rate='constant', learning_rate_init=0.000733572339133,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=38, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144] |(93, 1297) |relu |constant |0.882160811207 |0.949655526598 |3.06996111798e-08 |0.000733572339133 |0.000107086917176 |0.994819898019 |0.782336627762
MLPRegressor(activation='relu', alpha=0.000119993108376, batch_size='auto',        beta_1=0.905760930785, beta_2=0.933135808839, early_stopping=False,        epsilon=7.13238343497e-08, hidden_layer_sizes=(909,),        learning_rate='constant', learning_rate_init=0.000660416472799,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=0, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 12, 24, 36, 48, 60, 72, 84, 96] |(909,) |relu |constant |0.905760930785 |0.933135808839 |7.13238343497e-08 |0.000660416472799 |0.000119993108376 |0.990671081623 |0.728347618544
MLPRegressor(activation='relu', alpha=0.00010284591846, batch_size='auto',        beta_1=0.913666823381, beta_2=0.944241014819, early_stopping=False,        epsilon=7.0219755692e-08, hidden_layer_sizes=(582, 317),        learning_rate='adaptive', learning_rate_init=0.000786782298831,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=90, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192] |(582, 317) |relu |adaptive |0.913666823381 |0.944241014819 |7.0219755692e-08 |0.000786782298831 |0.00010284591846 |0.99641999664 |0.752168389792
MLPRegressor(activation='logistic', alpha=7.80622313006e-05,        batch_size='auto', beta_1=0.883384250491, beta_2=0.983449848869,        early_stopping=False, epsilon=1.22326622147e-07,        hidden_layer_sizes=(1043,), learning_rate='constant',        learning_rate_init=0.00142450525258, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=96, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 12, 24, 36, 48, 60, 72, 84] |(1043,) |logistic |constant |0.883384250491 |0.983449848869 |1.22326622147e-07 |0.00142450525258 |7.80622313006e-05 |0.999644434321 |0.750118840453
MLPRegressor(activation='relu', alpha=8.43008939135e-05, batch_size='auto',        beta_1=0.909172991766, beta_2=0.937128478577, early_stopping=False,        epsilon=2.0570334603e-08, hidden_layer_sizes=(160,),        learning_rate='constant', learning_rate_init=0.000921171673236,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=67, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80] |(160,) |relu |constant |0.909172991766 |0.937128478577 |2.0570334603e-08 |0.000921171673236 |8.43008939135e-05 |0.973447506001 |0.775858182239
MLPRegressor(activation='relu', alpha=0.000107202397146, batch_size='auto',        beta_1=0.880167792219, beta_2=0.999116380605, early_stopping=False,        epsilon=8.21935967017e-08, hidden_layer_sizes=(861, 161),        learning_rate='constant', learning_rate_init=0.00105307041403,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=58, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 12, 24, 36, 48, 60, 72, 84, 96, 108] |(861, 161) |relu |constant |0.880167792219 |0.999116380605 |8.21935967017e-08 |0.00105307041403 |0.000107202397146 |0.994695102592 |0.787195759547
MLPRegressor(activation='logistic', alpha=7.72074980569e-05,        batch_size='auto', beta_1=0.850277590766, beta_2=0.951537796337,        early_stopping=False, epsilon=7.50124042741e-08,        hidden_layer_sizes=(1007,), learning_rate='constant',        learning_rate_init=0.000924771206572, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=61, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 8, 16, 24, 32, 40, 48, 56, 64, 72] |(1007,) |logistic |constant |0.850277590766 |0.951537796337 |7.50124042741e-08 |0.000924771206572 |7.72074980569e-05 |0.999852633122 |0.749893319703
MLPRegressor(activation='logistic', alpha=0.000116427572572,        batch_size='auto', beta_1=0.88885399694, beta_2=0.938226838167,        early_stopping=False, epsilon=1.98928109832e-08,        hidden_layer_sizes=(338,), learning_rate='constant',        learning_rate_init=0.00128879504088, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=87, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 12, 24, 36, 48, 60, 72, 84, 96, 108] |(338,) |logistic |constant |0.88885399694 |0.938226838167 |1.98928109832e-08 |0.00128879504088 |0.000116427572572 |0.99690202719 |0.732957694318
MLPRegressor(activation='logistic', alpha=7.15317353581e-05,        batch_size='auto', beta_1=0.853535047069, beta_2=0.994662197993,        early_stopping=False, epsilon=9.16337319911e-08,        hidden_layer_sizes=(25,), learning_rate='adaptive',        learning_rate_init=0.000645698326744, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=15, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 8, 16, 24, 32, 40, 48, 56, 64, 72] |(25,) |logistic |adaptive |0.853535047069 |0.994662197993 |9.16337319911e-08 |0.000645698326744 |7.15317353581e-05 |0.95042576121 |0.799292430273
