MLPRegressor(activation='logistic', alpha=0.000118080580252,        batch_size='auto', beta_1=0.862596909181, beta_2=0.947009100263,        early_stopping=False, epsilon=6.49906057821e-08,        hidden_layer_sizes=(660, 467), learning_rate='constant',        learning_rate_init=0.000875149930074, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=80, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160] |(660, 467) |logistic |constant |0.862596909181 |0.947009100263 |6.49906057821e-08 |0.000875149930074 |0.000118080580252 |0.999136526039 |0.80419739794
MLPRegressor(activation='relu', alpha=0.000115203235437, batch_size='auto',        beta_1=0.927040785193, beta_2=0.972912510076, early_stopping=False,        epsilon=8.65247543352e-08, hidden_layer_sizes=(229, 1317),        learning_rate='constant', learning_rate_init=0.000598464850355,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=61, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 12, 24, 36, 48, 60, 72, 84, 96] |(229, 1317) |relu |constant |0.927040785193 |0.972912510076 |8.65247543352e-08 |0.000598464850355 |0.000115203235437 |0.997713873822 |0.766100463808
MLPRegressor(activation='logistic', alpha=0.000110434602745,        batch_size='auto', beta_1=0.913792379998, beta_2=0.935256605572,        early_stopping=False, epsilon=4.44970312526e-08,        hidden_layer_sizes=(464,), learning_rate='adaptive',        learning_rate_init=0.00101037398864, max_iter=10000, momentum=0.9,        nesterovs_momentum=True, power_t=0.5, random_state=87, shuffle=True,        solver='adam', tol=1e-10, validation_fraction=0.1, verbose=True,        warm_start=False)
[0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200] |(464,) |logistic |adaptive |0.913792379998 |0.935256605572 |4.44970312526e-08 |0.00101037398864 |0.000110434602745 |0.999721655754 |0.750683740625
MLPRegressor(activation='relu', alpha=0.000105672618492, batch_size='auto',        beta_1=0.903233918155, beta_2=0.931742920756, early_stopping=False,        epsilon=8.86761159622e-08, hidden_layer_sizes=(1490,),        learning_rate='constant', learning_rate_init=0.00121072133077,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=32, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 16, 32, 48, 64, 80, 96, 112, 128, 144] |(1490,) |relu |constant |0.903233918155 |0.931742920756 |8.86761159622e-08 |0.00121072133077 |0.000105672618492 |0.996432834769 |0.758568702838
MLPRegressor(activation='relu', alpha=7.87884631885e-05, batch_size='auto',        beta_1=0.864887583158, beta_2=0.965723100563, early_stopping=False,        epsilon=2.44418561849e-08, hidden_layer_sizes=(177,),        learning_rate='adaptive', learning_rate_init=0.00120144517196,        max_iter=10000, momentum=0.9, nesterovs_momentum=True, power_t=0.5,        random_state=31, shuffle=True, solver='adam', tol=1e-10,        validation_fraction=0.1, verbose=True, warm_start=False)
[0, 8, 16, 24, 32] |(177,) |relu |adaptive |0.864887583158 |0.965723100563 |2.44418561849e-08 |0.00120144517196 |7.87884631885e-05 |0.955333082187 |0.792662685388
